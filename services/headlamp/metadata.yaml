displayName: headlamp
description: Headlamp is an easy-to-use and extensible Kubernetes web UI.
category:
- artifact-hub
type: catalog
allowMultipleInstances: false
scope:
- workspace
licensing:
- Ultimate
- Enterprise
certifications:
overview: |
    # Headlamp Helm Chart
    
    Headlamp is an easy-to-use and extensible Kubernetes web UI that provides:
    - ðŸš€ Modern, fast, and responsive interface
    - ðŸ”’ OIDC authentication support
    - ðŸ”Œ Plugin system for extensibility
    - ðŸŽ¯ Real-time cluster state updates
    
    ## Prerequisites
    
    - Kubernetes 1.21+
    - Helm 3.x
    - Cluster admin access for initial setup
    
    ## Quick Start
    
    Add the Headlamp repository and install the chart:
    
    ```console
    $ helm repo add headlamp https://headlamp-k8s.github.io/headlamp/
    $ helm repo update
    $ helm install my-headlamp headlamp/headlamp --namespace kube-system
    ```
    
    Access Headlamp:
    ```console
    $ kubectl port-forward -n kube-system svc/my-headlamp 8080:80
    ```
    Then open http://localhost:8080 in your browser.
    
    ## Installation
    
    ### Basic Installation
    ```console
    $ helm install my-headlamp headlamp/headlamp --namespace kube-system
    ```
    
    ### Installation with OIDC
    ```console
    $ helm install my-headlamp headlamp/headlamp \
      --namespace kube-system \
      --set config.oidc.clientID=your-client-id \
      --set config.oidc.clientSecret=your-client-secret \
      --set config.oidc.issuerURL=https://your-issuer-url
    ```
    
    ### Installation with Ingress
    ```console
    $ helm install my-headlamp headlamp/headlamp \
      --namespace kube-system \
      --set ingress.enabled=true \
      --set ingress.hosts[0].host=headlamp.example.com \
      --set ingress.hosts[0].paths[0].path=/
    ```
    
    ## Configuration
    
    ### Core Parameters
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | replicaCount | int | `1` | Number of desired pods |
    | image.registry | string | `"ghcr.io"` | Container image registry |
    | image.repository | string | `"headlamp-k8s/headlamp"` | Container image name |
    | image.tag | string | `""` | Container image tag (defaults to Chart appVersion) |
    | image.pullPolicy | string | `"IfNotPresent"` | Image pull policy |
    
    ### Application Configuration
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | config.baseURL | string | `""` | Base URL path for Headlamp UI |
    | config.pluginsDir | string | `"/headlamp/plugins"` | Directory to load Headlamp plugins from |
    | config.extraArgs | array | `[]` | Additional arguments for Headlamp server |
    
    ### OIDC Configuration
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | config.oidc.clientID | string | `""` | OIDC client ID |
    | config.oidc.clientSecret | string | `""` | OIDC client secret |
    | config.oidc.issuerURL | string | `""` | OIDC issuer URL |
    | config.oidc.scopes | string | `""` | OIDC scopes to be used |
    | config.oidc.secret.create | bool | `true` | Create OIDC secret using provided values |
    | config.oidc.secret.name | string | `"oidc"` | Name of the OIDC secret |
    | config.oidc.externalSecret.enabled | bool | `false` | Enable using external secret for OIDC |
    | config.oidc.externalSecret.name | string | `""` | Name of external OIDC secret |
    
    There are three ways to configure OIDC:
    
    1. Using direct configuration:
    ```yaml
    config:
      oidc:
        clientID: "your-client-id"
        clientSecret: "your-client-secret"
        issuerURL: "https://your-issuer"
        scopes: "openid profile email"
    ```
    
    2. Using automatic secret creation:
    ```yaml
    config:
      oidc:
        secret:
          create: true
          name: oidc
    ```
    
    3. Using external secret:
    ```yaml
    config:
      oidc:
        secret:
          create: false
        externalSecret:
          enabled: true
          name: your-oidc-secret
    ```
    
    ### Deployment Configuration
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | replicaCount | int | `1` | Number of desired pods |
    | image.registry | string | `"ghcr.io"` | Container image registry |
    | image.repository | string | `"headlamp-k8s/headlamp"` | Container image name |
    | image.tag | string | `""` | Container image tag (defaults to Chart appVersion) |
    | image.pullPolicy | string | `"IfNotPresent"` | Image pull policy |
    | imagePullSecrets | list | `[]` | Image pull secrets references |
    | nameOverride | string | `""` | Override the name of the chart |
    | fullnameOverride | string | `""` | Override the full name of the chart |
    | initContainers | list | `[]` | Init containers to run before main container |
    
    ### Security Configuration
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | serviceAccount.create | bool | `true` | Create service account |
    | serviceAccount.name | string | `""` | Service account name |
    | serviceAccount.annotations | object | `{}` | Service account annotations |
    | clusterRoleBinding.create | bool | `true` | Create cluster role binding |
    | clusterRoleBinding.clusterRoleName | string | `"cluster-admin"` | Kubernetes ClusterRole name |
    | clusterRoleBinding.annotations | object | `{}` | Cluster role binding annotations |
    | podSecurityContext | object | `{}` | Pod security context (e.g., fsGroup: 2000) |
    | securityContext.runAsNonRoot | bool | `true` | Run container as non-root |
    | securityContext.privileged | bool | `false` | Run container in privileged mode |
    | securityContext.runAsUser | int | `100` | User ID to run container |
    | securityContext.runAsGroup | int | `101` | Group ID to run container |
    | securityContext.capabilities | object | `{}` | Container capabilities (e.g., drop: [ALL]) |
    | securityContext.readOnlyRootFilesystem | bool | `false` | Mount root filesystem as read-only |
    
    ### Storage Configuration
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | persistentVolumeClaim.enabled | bool | `false` | Enable PVC |
    | persistentVolumeClaim.annotations | object | `{}` | PVC annotations |
    | persistentVolumeClaim.size | string | `""` | PVC size (required if enabled) |
    | persistentVolumeClaim.storageClassName | string | `""` | Storage class name |
    | persistentVolumeClaim.accessModes | list | `[]` | PVC access modes |
    | persistentVolumeClaim.selector | object | `{}` | PVC selector |
    | persistentVolumeClaim.volumeMode | string | `""` | PVC volume mode |
    | volumeMounts | list | `[]` | Container volume mounts |
    | volumes | list | `[]` | Pod volumes |
    
    ### Network Configuration
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | service.type | string | `"ClusterIP"` | Kubernetes service type |
    | service.port | int | `80` | Kubernetes service port |
    | ingress.enabled | bool | `false` | Enable ingress |
    | ingress.className | string | `""` | Ingress class name |
    | ingress.annotations | object | `{}` | Ingress annotations (e.g., kubernetes.io/tls-acme: "true") |
    | ingress.labels | object | `{}` | Additional labels for the Ingress resource |
    | ingress.hosts | list | `[]` | Ingress hosts configuration |
    | ingress.tls | list | `[]` | Ingress TLS configuration |
    
    Example ingress configuration:
    ```yaml
    ingress:
      enabled: true
      annotations:
        kubernetes.io/tls-acme: "true"
      labels:
        app.kubernetes.io/part-of: traefik
        environment: prod
      hosts:
        - host: headlamp.example.com
          paths:
            - path: /
              type: ImplementationSpecific
      tls:
        - secretName: headlamp-tls
          hosts:
            - headlamp.example.com
    ```
    
    ### Resource Management
    
    | Key | Type | Default | Description |
    |-----|------|---------|-------------|
    | resources | object | `{}` | Container resource requests/limits |
    | nodeSelector | object | `{}` | Node labels for pod assignment |
    | tolerations | list | `[]` | Pod tolerations |
    | affinity | object | `{}` | Pod affinity settings |
    | podAnnotations | object | `{}` | Pod annotations |
    | env | list | `[]` | Additional environment variables |
    
    Example resource configuration:
    ```yaml
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    ```
    
    Example environment variables:
    ```yaml
    env:
      - name: KUBERNETES_SERVICE_HOST
        value: "localhost"
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
    ```
    
    ## Links
    
    - [GitHub Repository](https://github.com/headlamp-k8s/headlamp)
    - [Documentation](https://headlamp.dev/)
    - [Maintainers](https://github.com/headlamp-k8s/headlamp/blob/main/MAINTAINERS.md)
    
icon: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICB4bWxuczpjYz0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjIgogICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjczNSIKICAgaGVpZ2h0PSIxMTYiCiAgIHZpZXdCb3g9IjAgMCA3MzUgMTE2IgogICBmaWxsPSJub25lIgogICB2ZXJzaW9uPSIxLjEiCiAgIGlkPSJzdmcyMiIKICAgc29kaXBvZGk6ZG9jbmFtZT0iaGVhZGxhbXBfbGlnaHQuc3ZnIgogICBpbmtzY2FwZTp2ZXJzaW9uPSIxLjAuMSAoM2JjMmU4MTNmNSwgMjAyMC0wOS0wNykiPgogIDxtZXRhZGF0YQogICAgIGlkPSJtZXRhZGF0YTI4Ij4KICAgIDxyZGY6UkRGPgogICAgICA8Y2M6V29yawogICAgICAgICByZGY6YWJvdXQ9IiI+CiAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+CiAgICAgICAgPGRjOnR5cGUKICAgICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9wdXJsLm9yZy9kYy9kY21pdHlwZS9TdGlsbEltYWdlIiAvPgogICAgICAgIDxkYzp0aXRsZT48L2RjOnRpdGxlPgogICAgICA8L2NjOldvcms+CiAgICA8L3JkZjpSREY+CiAgPC9tZXRhZGF0YT4KICA8ZGVmcwogICAgIGlkPSJkZWZzMjYiIC8+CiAgPHNvZGlwb2RpOm5hbWVkdmlldwogICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgICBib3JkZXJvcGFjaXR5PSIxIgogICAgIG9iamVjdHRvbGVyYW5jZT0iMTAiCiAgICAgZ3JpZHRvbGVyYW5jZT0iMTAiCiAgICAgZ3VpZGV0b2xlcmFuY2U9IjEwIgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwIgogICAgIGlua3NjYXBlOnBhZ2VzaGFkb3c9IjIiCiAgICAgaW5rc2NhcGU6d2luZG93LXdpZHRoPSIyMDQ4IgogICAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9IjEwODgiCiAgICAgaWQ9Im5hbWVkdmlldzI0IgogICAgIHNob3dncmlkPSJmYWxzZSIKICAgICBpbmtzY2FwZTp6b29tPSIxLjk4NjM5NDYiCiAgICAgaW5rc2NhcGU6Y3g9IjM2Ny41IgogICAgIGlua3NjYXBlOmN5PSI0Mi4xMjU1NTgiCiAgICAgaW5rc2NhcGU6d2luZG93LXg9IjAiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9IjI3IgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiCiAgICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ic3ZnMjIiCiAgICAgaW5rc2NhcGU6ZG9jdW1lbnQtcm90YXRpb249IjAiIC8+CiAgPHJlY3QKICAgICBzdHlsZT0iZmlsbDojZmZmZmZmO3N0cm9rZTojZmZmZmZmO3N0cm9rZS13aWR0aDowLjk4MDgwNDtzdHJva2UtbGluZWpvaW46cm91bmQiCiAgICAgaWQ9InJlY3Q4NTMiCiAgICAgd2lkdGg9IjczNC4yNzYwNiIKICAgICBoZWlnaHQ9IjExNS4yMjMxOCIKICAgICB4PSIwLjIxMzgxODk0IgogICAgIHk9IjAuMjc2NTE1MjIiCiAgICAgaW5rc2NhcGU6ZXhwb3J0LXhkcGk9IjMwMCIKICAgICBpbmtzY2FwZTpleHBvcnQteWRwaT0iMzAwIiAvPgogIDxnCiAgICAgaWQ9Imc4NjIiCiAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMC45Mzc0NDEzMywwLDAsMC45Mzc0NDEzMywyNi4wNjY1NjcsMy40MTI4ODk5KSI+CiAgICA8cGF0aAogICAgICAgZD0iTSA5Mi4zLDczLjUgViA0Ni4zIEwgODUuMSwzNi45IFYgMjEuMSBMIDYyLDEyLjggViAwIEggMzAuMyBWIDEyLjggTCA3LjIsMjEuMSBWIDM2LjkgTCAwLDQ2LjMgViA3My41IEwgNy4yLDgzLjIgMCwxMDUuNiA0Ni4yLDExNS44IDkyLjMsMTA1LjYgODUuMSw4My4yIFoiCiAgICAgICBmaWxsPSIjMDAwMDAwIgogICAgICAgaWQ9InBhdGgyIiAvPgogICAgPHBhdGgKICAgICAgIGQ9Ik0gNDYuMiw4My4yIEMgNTguOTU3OCw4My4yIDY5LjMsNzIuODU3OCA2OS4zLDYwLjEgNjkuMyw0Ny4zNDIyIDU4Ljk1NzgsMzcgNDYuMiwzNyAzMy40NDIyLDM3IDIzLjEsNDcuMzQyMiAyMy4xLDYwLjEgYyAwLDEyLjc1NzggMTAuMzQyMiwyMy4xIDIzLjEsMjMuMSB6IgogICAgICAgZmlsbD0iI2ZhZWMyMCIKICAgICAgIGlkPSJwYXRoNCIgLz4KICAgIDxwYXRoCiAgICAgICBkPSJtIDE3OC40LDEwNy45IGggLTEwIHYgLTEwLjAwMDEgLTEwIC0xMCAtMTAgaCAtMTAgLTEwIHYgMTAgMTAgMTAgMTAuMDAwMSBoIC0xMCAtMTAgdiAtMTAuMDAwMSAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCBoIDEwIDEwIHYgMTAgMTAgMTAgMTAgaCAxMCAxMCB2IC0xMCAtMTAgLTEwIC0xMCBoIDEwIDEwIHYgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAuMDAwMSB6IgogICAgICAgZmlsbD0iIzAwMDAwMCIKICAgICAgIGlkPSJwYXRoNiIgLz4KICAgIDxwYXRoCiAgICAgICBkPSJtIDI1Ni40LDEwNy45IGggLTEwIC0xMCAtMTAgLTEwIC0xMCB2IC0xMC4wMDAxIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIGggMTAgMTAgMTAgMTAgMTAgMTAgdiAxMCAxMCBoIC0xMCAtMTAgLTEwIC0xMCB2IDEwIDEwIGggMTAgMTAgMTAgMTAgdiAxMCAxMCBoIC0xMCAtMTAgLTEwIC0xMCB2IDEwIDEwIGggMTAgMTAgMTAgMTAgdiAxMCAxMC4wMDAxIHoiCiAgICAgICBmaWxsPSIjMDAwMDAwIgogICAgICAgaWQ9InBhdGg4IiAvPgogICAgPHBhdGgKICAgICAgIGQ9Im0gMzM0LjQsMTA3LjkgaCAtMTAgdiAtMTAuMDAwMSAtMTAgLTEwIC0xMCBoIC0xMCAtMTAgdiAxMCAxMCAxMCAxMC4wMDAxIGggLTEwIC0xMCB2IC0xMC4wMDAxIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIGggMTAgMTAgMTAgMTAgMTAgMTAgdiAxMCAxMCAxMCAxMCAxMCAxMCAxMCAxMCAxMCAxMC4wMDAxIHogbSAtMjAsLTYwLjAwMDEgaCAxMCB2IC0xMCAtMTAgaCAtMTAgLTEwIHYgMTAgMTAgeiIKICAgICAgIGZpbGw9IiMwMDAwMDAiCiAgICAgICBpZD0icGF0aDEwIiAvPgogICAgPHBhdGgKICAgICAgIGQ9Im0gMzkyLjQsMTA3LjkgaCAtMTAgLTEwIC0xMCB2IC0xMC4wMDAxIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIGggMTAgMTAgMTAgMTAgdiAxMCAxMCBoIDEwIDEwIHYgMTAgMTAgMTAgMTAgMTAgMTAgaCAtMTAgLTEwIHYgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgaCAtMTAgLTEwIHYgMTAgMTAgMTAgMTAgMTAgMTAgaCAxMCAxMCB2IDEwIDEwLjAwMDEgeiIKICAgICAgIGZpbGw9IiMwMDAwMDAiCiAgICAgICBpZD0icGF0aDEyIiAvPgogICAgPHBhdGgKICAgICAgIGQ9Im0gNDkwLjQsMTA3LjkgaCAtMTAgLTEwIC0xMCAtMTAgLTEwIHYgLTEwLjAwMDEgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgaCAxMCAxMCB2IDEwIDEwIDEwIDEwIDEwIDEwIDEwIDEwIGggMTAgMTAgMTAgMTAgdiAxMCAxMC4wMDAxIHoiCiAgICAgICBmaWxsPSIjMDAwMDAwIgogICAgICAgaWQ9InBhdGgxNCIgLz4KICAgIDxwYXRoCiAgICAgICBkPSJtIDU2OC40LDEwNy45IGggLTEwIHYgLTEwLjAwMDEgLTEwIC0xMCAtMTAgaCAtMTAgLTEwIHYgMTAgMTAgMTAgMTAuMDAwMSBoIC0xMCAtMTAgdiAtMTAuMDAwMSAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCBoIDEwIDEwIDEwIDEwIDEwIDEwIHYgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAuMDAwMSB6IG0gLTIwLC02MC4wMDAxIGggMTAgdiAtMTAgLTEwIGggLTEwIC0xMCB2IDEwIDEwIHoiCiAgICAgICBmaWxsPSIjMDAwMDAwIgogICAgICAgaWQ9InBhdGgxNiIgLz4KICAgIDxwYXRoCiAgICAgICBkPSJtIDY0Ni40LDEwNy45IGggLTEwIHYgLTEwLjAwMDEgLTEwIC0xMCAtMTAgLTEwIC0xMCBoIC0xMCAtMTAgdiAxMCAxMCAxMCAxMCAxMCAxMC4wMDAxIGggLTEwIC0xMCB2IC0xMC4wMDAxIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIGggMTAgMTAgdiAxMCAxMCBoIDEwIDEwIHYgLTEwIC0xMCBoIDEwIDEwIHYgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAgMTAuMDAwMSB6IgogICAgICAgZmlsbD0iIzAwMDAwMCIKICAgICAgIGlkPSJwYXRoMTgiIC8+CiAgICA8cGF0aAogICAgICAgZD0ibSA2ODQuNCwxMDcuOSBoIC0xMCB2IC0xMC4wMDAxIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIC0xMCAtMTAgLTEwIGggMTAgMTAgMTAgMTAgMTAgMTAgdiAxMCAxMCAxMCAxMCAxMCAxMCBoIC0xMCAtMTAgLTEwIC0xMCB2IDEwIDEwIDEwIDEwLjAwMDEgeiBtIDIwLC02MC4wMDAxIGggMTAgdiAtMTAgLTEwIGggLTEwIC0xMCB2IDEwIDEwIHoiCiAgICAgICBmaWxsPSIjMDAwMDAwIgogICAgICAgaWQ9InBhdGgyMCIgLz4KICA8L2c+Cjwvc3ZnPgo=