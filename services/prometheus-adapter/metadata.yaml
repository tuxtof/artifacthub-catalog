displayName: prometheus-adapter
description: A Helm chart for k8s prometheus adapter
category:
- artifact-hub
type: catalog
allowMultipleInstances: false
scope:
- workspace
licensing:
- Ultimate
- Enterprise
certifications:
overview: |
    # Prometheus Adapter
    
    Installs the [Prometheus Adapter](https://github.com/kubernetes-sigs/prometheus-adapter) for the Custom Metrics API. Custom metrics are used in Kubernetes by [Horizontal Pod Autoscalers](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) to scale workloads based upon your own metric pulled from an external metrics provider like Prometheus. This chart complements the [metrics-server](https://github.com/helm/charts/tree/master/stable/metrics-server) chart that provides resource only metrics.
    
    ## Prerequisites
    
    Kubernetes 1.14+
    
    ## Get Helm Repositories Info
    
    ```console
    helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    helm repo update
    ```
    
    _See [`helm repo`](https://helm.sh/docs/helm/helm_repo/) for command documentation._
    
    ## Install Helm Chart
    
    ```console
    helm install [RELEASE_NAME] prometheus-community/prometheus-adapter
    ```
    
    _See [configuration](#configuration) below._
    
    _See [helm install](https://helm.sh/docs/helm/helm_install/) for command documentation._
    
    ## Uninstall Helm Chart
    
    ```console
    helm uninstall [RELEASE_NAME]
    ```
    
    This removes all the Kubernetes components associated with the chart and deletes the release.
    
    _See [helm uninstall](https://helm.sh/docs/helm/helm_uninstall/) for command documentation._
    
    ## Upgrading Helm Chart
    
    ```console
    helm upgrade [RELEASE_NAME] [CHART] --install
    ```
    
    _See [helm upgrade](https://helm.sh/docs/helm/helm_upgrade/) for command documentation._
    
    ### To 4.2.0
    
    Readiness and liveness probes are now fully configurable through values `readinessProbe` and `livenessProbe`. The previous values have been kept as defaults.
    
    ### To 4.0.0
    
    Previously, security context of the container was set directly in the deployment template. This release makes it configurable through the new configuration variable `securityContext` whilst keeping the previously set values as defaults. Furthermore, previous variable `runAsUser` is now set in `securityContext` and is not used any longer. Please, use `securityContext.runAsUser` instead. In the same security context, `seccompProfile` has been enabled and set to type `RuntimeDefault`.
    
    ### To 3.0.0
    
    Due to a change in deployment labels, the upgrade requires `helm upgrade --force` in order to re-create the deployment.
    
    ## Configuration
    
    See [Customizing the Chart Before Installing](https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing). To see all configurable options with detailed comments, visit the chart's [values.yaml](./values.yaml), or run these configuration commands:
    
    ```console
    helm show values prometheus-community/prometheus-adapter
    ```
    
    ### Prometheus Service Endpoint
    
    To use the chart, ensure the `prometheus.url` and `prometheus.port` are configured with the correct Prometheus service endpoint. If Prometheus is exposed under HTTPS the host's CA Bundle must be exposed to the container using `extraVolumes` and `extraVolumeMounts`.
    
    ### Adapter Rules
    
    Additionally, the chart comes with a set of default rules out of the box but they may pull in too many metrics or not map them correctly for your needs. Therefore, it is recommended to populate `rules.custom` with a list of rules (see the [config document](https://github.com/kubernetes-sigs/prometheus-adapter/blob/master/docs/config.md) for the proper format).
    
    ### Horizontal Pod Autoscaler Metrics
    
    Finally, to configure your Horizontal Pod Autoscaler to use the custom metric, see the custom metrics section of the [HPA walkthrough](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/#autoscaling-on-multiple-metrics-and-custom-metrics).
    
    The Prometheus Adapter can serve three different [metrics APIs](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-metrics-apis):
    
    ### Custom Metrics
    
    Enabling this option will cause custom metrics to be served at `/apis/custom.metrics.k8s.io/v1beta1`. Enabled by default when `rules.default` is true, but can be customized by populating `rules.custom`:
    
    ```yaml
    rules:
      custom:
      - seriesQuery: '{__name__=~"^some_metric_count$"}'
        resources:
          template: <<.Resource>>
        name:
          matches: ""
          as: "my_custom_metric"
        metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    ```
    
    ### External Metrics
    
    Enabling this option will cause external metrics to be served at `/apis/external.metrics.k8s.io/v1beta1`. Can be enabled by populating `rules.external`:
    
    ```yaml
    rules:
      external:
      - seriesQuery: '{__name__=~"^some_metric_count$"}'
        resources:
          template: <<.Resource>>
        name:
          matches: ""
          as: "my_external_metric"
        metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    ```
    
    ### Resource Metrics
    
    Enabling this option will cause resource metrics to be served at `/apis/metrics.k8s.io/v1beta1`. Resource metrics will allow pod CPU and Memory metrics to be used in [Horizontal Pod Autoscalers](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) as well as the `kubectl top` command. Can be enabled by populating `rules.resource`:
    
    ```yaml
    rules:
      resource:
        cpu:
          containerQuery: |
            sum by (<<.GroupBy>>) (
              rate(container_cpu_usage_seconds_total{container!="",<<.LabelMatchers>>}[3m])
            )
          nodeQuery: |
            sum  by (<<.GroupBy>>) (
              rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",<<.LabelMatchers>>}[3m])
            )
          resources:
            overrides:
              node:
                resource: node
              namespace:
                resource: namespace
              pod:
                resource: pod
          containerLabel: container
        memory:
          containerQuery: |
            sum by (<<.GroupBy>>) (
              avg_over_time(container_memory_working_set_bytes{container!="",<<.LabelMatchers>>}[3m])
            )
          nodeQuery: |
            sum by (<<.GroupBy>>) (
              avg_over_time(node_memory_MemTotal_bytes{<<.LabelMatchers>>}[3m])
              -
              avg_over_time(node_memory_MemAvailable_bytes{<<.LabelMatchers>>}[3m])
            )
          resources:
            overrides:
              node:
                resource: node
              namespace:
                resource: namespace
              pod:
                resource: pod
          containerLabel: container
        window: 3m
    ```
    
    **NOTE:** Setting a value for `rules.resource` will also deploy the resource metrics API service, providing the same functionality as [metrics-server](https://github.com/helm/charts/tree/master/stable/metrics-server). As such it is not possible to deploy them both in the same cluster.
    
icon: PCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGNoYXJzZXQ9InV0Zi04Ii8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9Ii9zdGF0aWMvbWVkaWEvbG9nb192Mi5wbmciLz48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSIvPjxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjNDE3NTk4Ii8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSIvc3RhdGljL21lZGlhL2xvZ28xOTJfdjIucG5nIi8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iNTEyeDUxMiIgaHJlZj0iL3N0YXRpYy9tZWRpYS9sb2dvNTEyX3YyLnBuZyIvPjxsaW5rIHJlbD0ibWFuaWZlc3QiIGhyZWY9Ii9tYW5pZmVzdC5qc29uIi8+PHRpdGxlPkFydGlmYWN0IEh1YjwvdGl0bGU+PG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkZpbmQsIGluc3RhbGwgYW5kIHB1Ymxpc2ggQ2xvdWQgTmF0aXZlIHBhY2thZ2VzIi8+PG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IkFydGlmYWN0IEh1YiwgQ2xvdWQgTmF0aXZlLCBLdWJlcm5ldGVzLCBwYWNrYWdlcyIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnNpdGVOYW1lIiBjb250ZW50PSJBcnRpZmFjdCBIdWIiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1Yjp3ZWJzaXRlTG9nbyIgY29udGVudD0iL3N0YXRpYy9tZWRpYS9sb2dvL2FydGlmYWN0aHViLWJyYW5kLXdoaXRlLnN2ZyIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnByaW1hcnlDb2xvciIgY29udGVudD0iIzQxNzU5OCIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnNlY29uZGFyeUNvbG9yIiBjb250ZW50PSIjMkQ0ODU3Ii8+PG1ldGEgbmFtZT0iYXJ0aWZhY3RodWI6Z2l0aHViQXV0aCIgY29udGVudD0idHJ1ZSIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOmdvb2dsZUF1dGgiIGNvbnRlbnQ9InRydWUiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpvaWRjQXV0aCIgY29udGVudD0iZmFsc2UiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpzYW1wbGVRdWVyaWVzIiBjb250ZW50PSJbeyYjMzQ7bmFtZSYjMzQ7OiYjMzQ7T0xNIG9wZXJhdG9ycyBmb3IgZGF0YWJhc2VzJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0zXHUwMDI2Y2F0ZWdvcnk9MiYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtQYWNrYWdlcyBvZiBhbnkga2luZCByZWxhdGVkIHRvIGV0Y2QmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDt0c19xdWVyeV93ZWI9ZXRjZCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtGYWxjbyBydWxlcyBmb3IgQ1ZFJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0xXHUwMDI2dHNfcXVlcnlfd2ViPWN2ZSYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtPTE0gb3BlcmF0b3JzIGluIHRoZSBtb25pdG9yaW5nIGNhdGVnb3J5JiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0zXHUwMDI2Y2F0ZWdvcnk9NCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtQYWNrYWdlcyBmcm9tIHZlcmlmaWVkIHB1Ymxpc2hlcnMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDt2ZXJpZmllZF9wdWJsaXNoZXI9dHJ1ZSYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtPZmZpY2lhbCBQcm9tZXRoZXVzIHBhY2thZ2VzJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7dHNfcXVlcnlfd2ViPXByb21ldGhldXNcdTAwMjZvZmZpY2lhbD10cnVlJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O09wZXJhdG9ycyB3aXRoIGF1dG8gcGlsb3QgY2FwYWJpbGl0aWVzJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7Y2FwYWJpbGl0aWVzPWF1dG8mIzQzO3BpbG90JiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0hlbG0gQ2hhcnRzIGluIHRoZSBzdG9yYWdlIGNhdGVnb3J5JiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0wXHUwMDI2Y2F0ZWdvcnk9NyYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtQYWNrYWdlcyB3aXRoIEFwYWNoZS0yLjAgbGljZW5zZSYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2xpY2Vuc2U9QXBhY2hlLTIuMCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtPUEEgcG9saWNpZXMgd2l0aCBNSVQgbGljZW5zZSYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2tpbmQ9Mlx1MDAyNmxpY2Vuc2U9TUlUJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0hlbG0gcGx1Z2lucyYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2tpbmQ9NiYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtLdWJlY3RsIHBsdWdpbnMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTUmIzM0O30seyYjMzQ7bmFtZSYjMzQ7OiYjMzQ7VGVrdG9uIHRhc2tzIGFuZCBwaXBlbGluZXMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTdcdTAwMjZraW5kPTExJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0dhdGVrZWVwZXIgcG9saWNpZXMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTE0JiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0t1YmV3YXJkZW4gcG9saWNpZXMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTEzJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0tFREEgc2NhbGVycyYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2tpbmQ9OCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtLZXB0biBpbnRlZ3JhdGlvbnMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTEwJiMzNDt9XSIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOmFsbG93UHJpdmF0ZVJlcG9zaXRvcmllcyIgY29udGVudD0iZmFsc2UiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjphbGxvd1VzZXJTaWduVXAiIGNvbnRlbnQ9InRydWUiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpnYVRyYWNraW5nSUQiIGNvbnRlbnQ9IiIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOm1vdGQiIGNvbnRlbnQ9IiIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOm1vdGRTZXZlcml0eSIgY29udGVudD0iaW5mbyIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnJlcG9ydFVSTCIgY29udGVudD0iaHR0cHM6Ly9naXRodWIuY29tL2FydGlmYWN0aHViL2h1Yi9pc3N1ZXMvbmV3P2Fzc2lnbmVlcz0mYW1wO2xhYmVscz1hYnVzZSYjNDM7cmVwb3J0JmFtcDt0ZW1wbGF0ZT1yZXBvcnQtYWJ1c2UubWQmYW1wO3RpdGxlPSU1QkFCVVNFLVJFUE9SVCU1RCYjNDM7UmVwb3NpdG9yeSYjNDM7b3ImIzQzO3BhY2thZ2UmIzQzO25hbWUiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpiYW5uZXJzVVJMIiBjb250ZW50PSJodHRwczovL2NuY2YuZ2l0aHViLmlvL2Jhbm5lcnMvYmFubmVycy55bWwiLz48bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0id2Vic2l0ZSIvPjxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iQXJ0aWZhY3QgSHViIi8+PG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJGaW5kLCBpbnN0YWxsIGFuZCBwdWJsaXNoIENsb3VkIE5hdGl2ZSBwYWNrYWdlcyIvPjxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cHM6Ly9hcnRpZmFjdGh1Yi5pby9zdGF0aWMvbWVkaWEvYXJ0aWZhY3RIdWJfdjIucG5nIi8+PG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5X2xhcmdlX2ltYWdlIi8+PG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIgY29udGVudD0iQXJ0aWZhY3QgSHViIi8+PG1ldGEgbmFtZT0idHdpdHRlcjpkZXNjcmlwdGlvbiIgY29udGVudD0iRmluZCwgaW5zdGFsbCBhbmQgcHVibGlzaCBDbG91ZCBOYXRpdmUgcGFja2FnZXMiLz48bWV0YSBuYW1lPSJ0d2l0dGVyOmltYWdlOnNyYyIgY29udGVudD0iaHR0cHM6Ly9hcnRpZmFjdGh1Yi5pby9zdGF0aWMvbWVkaWEvYXJ0aWZhY3RIdWJfdjIucG5nIi8+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3N0YXRpYy9qcy9maXhGaXJlZm94TmlnaHRNb2RlLmpzIiBhc3luYz48L3NjcmlwdD48c2NyaXB0IGRlZmVyPSJkZWZlciIgc3JjPSIvc3RhdGljL2pzL21haW4uZmZiZDY2MTkuanMiPjwvc2NyaXB0PjxsaW5rIGhyZWY9Ii9zdGF0aWMvY3NzL21haW4uNGY3NGZjMjEuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48bm9zY3JpcHQ+WW91IG5lZWQgdG8gZW5hYmxlIEphdmFTY3JpcHQgdG8gcnVuIHRoaXMgYXBwLjwvbm9zY3JpcHQ+PGRpdiBpZD0icm9vdCI+PC9kaXY+PC9ib2R5PjwvaHRtbD4=