displayName: prom-label-proxy
description: A proxy that enforces a given label in a given PromQL query.
category:
- artifact-hub
type: catalog
allowMultipleInstances: false
scope:
- workspace
licensing:
- Ultimate
- Enterprise
certifications:
overview: |
    # prom-label-proxy
    
    A proxy that enforces a given label in a given PromQL query.
    
    **Homepage:** <https://github.com/prometheus-community/prom-label-proxy>
    
    ## Get Repository Info
    
    ```console
    helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    helm repo update
    ```
    
    _See [`helm repo`](https://helm.sh/docs/helm/helm_repo/) for command documentation._
    
    ## Install Chart
    
    ```console
    helm install [RELEASE_NAME] prometheus-community/prom-label-proxy
    ```
    
    _See [configuration](#configuration) below._
    
    _See [`helm install`](https://helm.sh/docs/helm/helm_install/) for command documentation._
    
    ## Uninstall Chart
    
    ```console
    helm uninstall [RELEASE_NAME]
    ```
    
    This removes all the Kubernetes components associated with the chart and deletes the release.
    
    _See [`helm uninstall`](https://helm.sh/docs/helm/helm_uninstall/) for command documentation._
    
    ## Upgrading Chart
    
    ```console
    helm upgrade [RELEASE_NAME] [CHART] --install
    ```
    
    _See [`helm upgrade`](https://helm.sh/docs/helm/helm_upgrade/) for command documentation._
    
    ## Configuration
    
    See [Customizing the Chart Before Installing](https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing). To see all configurable options with detailed comments, visit the chart's [values.yaml](./values.yaml), or run these configuration commands:
    
    ```console
    helm show values prometheus-community/prom-label-proxy
    ```
    
    ### kube-rbac-proxy
    
    You can enable `prom-label-proxy` endpoint protection using `kube-rbac-proxy`. By setting `kubeRBACProxy.enabled: true`, this chart will deploy one RBAC proxy container for `config.listenAddress`.
    
    With the below example `values.yaml` :
    
    ```yaml
    config:
      upstream: http://prometheus:9090
      extraArgs:
      - --enable-label-apis=true
      - --header-name=X-Namespace
    
    kubeRBACProxy:
      enabled: true
      config:
        authorization:
          rewrites:
            byHttpHeader:
              name: X-Namespace
          resourceAttributes:
            apiVersion: v1
            resource: namespaces
            subresource: metrics
            namespace: "{{ .Value }}"
    ```
    
    To authorize access, authenticate your requests (via a `ServiceAccount` for example) with a `Role` attached such as:
    
    ```yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: tenant1-metrics-reader
      namespace: tenant1
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: tenant1-metrics
      namespace: tenant1
    rules:
      - apiGroups: [ '' ]
        resources:
          - namespaces/metrics
        verbs: [ "create", "get" ]
    ---
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: tenant1-metrics-reader
      namespace: tenant1
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: tenant1-metrics
    subjects:
    - kind: ServiceAccount
      name: tenant1-metrics-reader
      namespace: tenant1
    ```
    
    See [kube-rbac-proxy examples](https://github.com/brancz/kube-rbac-proxy/tree/master/examples/rewrites) for more details.
    
icon: PCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGNoYXJzZXQ9InV0Zi04Ii8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9Ii9zdGF0aWMvbWVkaWEvbG9nb192Mi5wbmciLz48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSIvPjxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjNDE3NTk4Ii8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSIvc3RhdGljL21lZGlhL2xvZ28xOTJfdjIucG5nIi8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iNTEyeDUxMiIgaHJlZj0iL3N0YXRpYy9tZWRpYS9sb2dvNTEyX3YyLnBuZyIvPjxsaW5rIHJlbD0ibWFuaWZlc3QiIGhyZWY9Ii9tYW5pZmVzdC5qc29uIi8+PHRpdGxlPkFydGlmYWN0IEh1YjwvdGl0bGU+PG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkZpbmQsIGluc3RhbGwgYW5kIHB1Ymxpc2ggQ2xvdWQgTmF0aXZlIHBhY2thZ2VzIi8+PG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IkFydGlmYWN0IEh1YiwgQ2xvdWQgTmF0aXZlLCBLdWJlcm5ldGVzLCBwYWNrYWdlcyIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnNpdGVOYW1lIiBjb250ZW50PSJBcnRpZmFjdCBIdWIiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1Yjp3ZWJzaXRlTG9nbyIgY29udGVudD0iL3N0YXRpYy9tZWRpYS9sb2dvL2FydGlmYWN0aHViLWJyYW5kLXdoaXRlLnN2ZyIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnByaW1hcnlDb2xvciIgY29udGVudD0iIzQxNzU5OCIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnNlY29uZGFyeUNvbG9yIiBjb250ZW50PSIjMkQ0ODU3Ii8+PG1ldGEgbmFtZT0iYXJ0aWZhY3RodWI6Z2l0aHViQXV0aCIgY29udGVudD0idHJ1ZSIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOmdvb2dsZUF1dGgiIGNvbnRlbnQ9InRydWUiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpvaWRjQXV0aCIgY29udGVudD0iZmFsc2UiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpzYW1wbGVRdWVyaWVzIiBjb250ZW50PSJbeyYjMzQ7bmFtZSYjMzQ7OiYjMzQ7T0xNIG9wZXJhdG9ycyBmb3IgZGF0YWJhc2VzJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0zXHUwMDI2Y2F0ZWdvcnk9MiYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtQYWNrYWdlcyBvZiBhbnkga2luZCByZWxhdGVkIHRvIGV0Y2QmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDt0c19xdWVyeV93ZWI9ZXRjZCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtGYWxjbyBydWxlcyBmb3IgQ1ZFJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0xXHUwMDI2dHNfcXVlcnlfd2ViPWN2ZSYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtPTE0gb3BlcmF0b3JzIGluIHRoZSBtb25pdG9yaW5nIGNhdGVnb3J5JiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0zXHUwMDI2Y2F0ZWdvcnk9NCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtQYWNrYWdlcyBmcm9tIHZlcmlmaWVkIHB1Ymxpc2hlcnMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDt2ZXJpZmllZF9wdWJsaXNoZXI9dHJ1ZSYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtPZmZpY2lhbCBQcm9tZXRoZXVzIHBhY2thZ2VzJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7dHNfcXVlcnlfd2ViPXByb21ldGhldXNcdTAwMjZvZmZpY2lhbD10cnVlJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O09wZXJhdG9ycyB3aXRoIGF1dG8gcGlsb3QgY2FwYWJpbGl0aWVzJiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7Y2FwYWJpbGl0aWVzPWF1dG8mIzQzO3BpbG90JiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0hlbG0gQ2hhcnRzIGluIHRoZSBzdG9yYWdlIGNhdGVnb3J5JiMzNDssJiMzNDtxdWVyeXN0cmluZyYjMzQ7OiYjMzQ7a2luZD0wXHUwMDI2Y2F0ZWdvcnk9NyYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtQYWNrYWdlcyB3aXRoIEFwYWNoZS0yLjAgbGljZW5zZSYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2xpY2Vuc2U9QXBhY2hlLTIuMCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtPUEEgcG9saWNpZXMgd2l0aCBNSVQgbGljZW5zZSYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2tpbmQ9Mlx1MDAyNmxpY2Vuc2U9TUlUJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0hlbG0gcGx1Z2lucyYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2tpbmQ9NiYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtLdWJlY3RsIHBsdWdpbnMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTUmIzM0O30seyYjMzQ7bmFtZSYjMzQ7OiYjMzQ7VGVrdG9uIHRhc2tzIGFuZCBwaXBlbGluZXMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTdcdTAwMjZraW5kPTExJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0dhdGVrZWVwZXIgcG9saWNpZXMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTE0JiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0t1YmV3YXJkZW4gcG9saWNpZXMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTEzJiMzNDt9LHsmIzM0O25hbWUmIzM0OzomIzM0O0tFREEgc2NhbGVycyYjMzQ7LCYjMzQ7cXVlcnlzdHJpbmcmIzM0OzomIzM0O2tpbmQ9OCYjMzQ7fSx7JiMzNDtuYW1lJiMzNDs6JiMzNDtLZXB0biBpbnRlZ3JhdGlvbnMmIzM0OywmIzM0O3F1ZXJ5c3RyaW5nJiMzNDs6JiMzNDtraW5kPTEwJiMzNDt9XSIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOmFsbG93UHJpdmF0ZVJlcG9zaXRvcmllcyIgY29udGVudD0iZmFsc2UiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjphbGxvd1VzZXJTaWduVXAiIGNvbnRlbnQ9InRydWUiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpnYVRyYWNraW5nSUQiIGNvbnRlbnQ9IiIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOm1vdGQiIGNvbnRlbnQ9IiIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOm1vdGRTZXZlcml0eSIgY29udGVudD0iaW5mbyIvPjxtZXRhIG5hbWU9ImFydGlmYWN0aHViOnJlcG9ydFVSTCIgY29udGVudD0iaHR0cHM6Ly9naXRodWIuY29tL2FydGlmYWN0aHViL2h1Yi9pc3N1ZXMvbmV3P2Fzc2lnbmVlcz0mYW1wO2xhYmVscz1hYnVzZSYjNDM7cmVwb3J0JmFtcDt0ZW1wbGF0ZT1yZXBvcnQtYWJ1c2UubWQmYW1wO3RpdGxlPSU1QkFCVVNFLVJFUE9SVCU1RCYjNDM7UmVwb3NpdG9yeSYjNDM7b3ImIzQzO3BhY2thZ2UmIzQzO25hbWUiLz48bWV0YSBuYW1lPSJhcnRpZmFjdGh1YjpiYW5uZXJzVVJMIiBjb250ZW50PSJodHRwczovL2NuY2YuZ2l0aHViLmlvL2Jhbm5lcnMvYmFubmVycy55bWwiLz48bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0id2Vic2l0ZSIvPjxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iQXJ0aWZhY3QgSHViIi8+PG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJGaW5kLCBpbnN0YWxsIGFuZCBwdWJsaXNoIENsb3VkIE5hdGl2ZSBwYWNrYWdlcyIvPjxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cHM6Ly9hcnRpZmFjdGh1Yi5pby9zdGF0aWMvbWVkaWEvYXJ0aWZhY3RIdWJfdjIucG5nIi8+PG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5X2xhcmdlX2ltYWdlIi8+PG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIgY29udGVudD0iQXJ0aWZhY3QgSHViIi8+PG1ldGEgbmFtZT0idHdpdHRlcjpkZXNjcmlwdGlvbiIgY29udGVudD0iRmluZCwgaW5zdGFsbCBhbmQgcHVibGlzaCBDbG91ZCBOYXRpdmUgcGFja2FnZXMiLz48bWV0YSBuYW1lPSJ0d2l0dGVyOmltYWdlOnNyYyIgY29udGVudD0iaHR0cHM6Ly9hcnRpZmFjdGh1Yi5pby9zdGF0aWMvbWVkaWEvYXJ0aWZhY3RIdWJfdjIucG5nIi8+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3N0YXRpYy9qcy9maXhGaXJlZm94TmlnaHRNb2RlLmpzIiBhc3luYz48L3NjcmlwdD48c2NyaXB0IGRlZmVyPSJkZWZlciIgc3JjPSIvc3RhdGljL2pzL21haW4uZmZiZDY2MTkuanMiPjwvc2NyaXB0PjxsaW5rIGhyZWY9Ii9zdGF0aWMvY3NzL21haW4uNGY3NGZjMjEuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48bm9zY3JpcHQ+WW91IG5lZWQgdG8gZW5hYmxlIEphdmFTY3JpcHQgdG8gcnVuIHRoaXMgYXBwLjwvbm9zY3JpcHQ+PGRpdiBpZD0icm9vdCI+PC9kaXY+PC9ib2R5PjwvaHRtbD4=